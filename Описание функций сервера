# Описание функций сервера

## Функции для пользователей

### 1. Создание пользователя (`createUser `)
- **Описание**: Регистрация нового пользователя. Проверяет уникальность логина и email, хеширует пароль и сохраняет информацию о пользователе в базе данных.
- **Параметры**:
  - `login`: Логин пользователя.
  - `password`: Пароль пользователя.
  - `email`: Email пользователя.
  - `errorMessage`: Ссылка на строку для возврата сообщения об ошибке.
  - `userId`: Ссылка на переменную для возврата идентификатора нового пользователя.
- **Возвращаемое значение**: `true`, если пользователь успешно создан, иначе `false`.

### 2. Аутентификация пользователя (`authenticateUser `)
- **Описание**: Проверяет, существует ли пользователь с указанным логином и паролем (пароль должен быть хеширован).
- **Параметры**:
  - `login`: Логин пользователя.
  - `password`: Пароль пользователя.
- **Возвращаемое значение**: `true`, если аутентификация успешна, иначе `false`.

### 3. Сохранение вычисления (`saveCalculation`)
- **Описание**: Сохраняет информацию о выполненной операции в историю вычислений. Удаляет самые старые записи, если количество записей превышает установленный лимит.
- **Параметры**:
  - `userId`: Идентификатор пользователя.
  - `operation`: Описание операции.
- **Возвращаемое значение**: `true`, если операция успешно сохранена, иначе `false`.

### 4. Получение истории вычислений (`getHistory`)
- **Описание**: Извлекает историю вычислений для указанного пользователя, ограничивая количество возвращаемых записей.
- **Параметры**:
  - `userId`: Идентификатор пользователя.
  - `limit`: Максимальное количество записей для возврата.
- **Возвращаемое значение**: Список операций в формате `QList<QMap<QString, QVariant>>`.

## Функции для администраторов

### 1. Вывод списка пользователей (`listUsers`)
- **Описание**: Выводит список всех пользователей, зарегистрированных в системе.
- **Параметры**: Нет.
- **Возвращаемое значение**: Нет, выводит данные в лог.

### 2. Удаление таблицы пользователей (`dropUser  Table`)
- **Описание**: Удаляет таблицу `Users` из базы данных, если она существует.
- **Параметры**: Нет.
- **Возвращаемое значение**: Нет.

### 3. Получение идентификатора пользователя (`getUser  Id`)
- **Описание**: Получает идентификатор пользователя по логину.
- **Параметры**:
  - `login`: Логин пользователя.
- **Возвращаемое значение**: Идентификатор пользователя или 0 в случае ошибки.

## Общие функции

### 1. Создание таблиц (`createTables`)
- **Описание**: Создает необходимые таблицы в базе данных, если они еще не существуют. Включает таблицы `Users` для хранения информации о пользователях и `CalculatorHistory` для хранения истории вычислений.
- **Параметры**: Нет.
- **Возвращаемое значение**: `true`, если таблицы успешно созданы, иначе `false`.
